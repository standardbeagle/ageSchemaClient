name: Documentation CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'website/**'
      - 'docs/**'
      - '.github/workflows/documentation.yml'
  pull_request:
    branches: [main]
    paths:
      - 'website/**'
      - 'docs/**'
      - '.github/workflows/documentation.yml'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdatedBy and showLastUpdateTime are disabled

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install website dependencies
        working-directory: ./website
        run: pnpm install

      - name: Generate API documentation
        run: pnpm docs:api

      - name: Build documentation
        working-directory: ./website
        env:
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_SEARCH_API_KEY: ${{ secrets.ALGOLIA_SEARCH_API_KEY }}
          ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME || 'ageSchemaClient' }}
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website/build

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Link validation job
  validate-links:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Install dependencies
        run: pnpm install

      - name: Install website dependencies
        working-directory: ./website
        run: pnpm install

      - name: Generate API documentation
        run: pnpm docs:api

      - name: Build documentation
        working-directory: ./website
        env:
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_SEARCH_API_KEY: ${{ secrets.ALGOLIA_SEARCH_API_KEY }}
          ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME || 'ageSchemaClient' }}
        run: pnpm build

      - name: Serve documentation locally
        working-directory: ./website
        run: |
          pnpm serve --port 3000 &
          sleep 10

      - name: Install link checker
        run: npm install -g broken-link-checker

      - name: Check for broken links
        run: |
          blc http://localhost:3000 --recursive --ordered --exclude-external
